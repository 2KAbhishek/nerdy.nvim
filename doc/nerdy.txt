*nerdy.txt*          For Neovim >= 0.8.0          Last change: 2025 October 16

==============================================================================
Table of Contents                                    *nerdy-table-of-contents*

  - Features                                                  |nerdy-features|
  - Setup                                                        |nerdy-setup|
  - Behind The Code                                    |nerdy-behind-the-code|

Do you like Nerd fonts <https://github.com/ryanoasis/nerd-fonts>? but don’t
like going over to their site <https://www.nerdfonts.com/cheat-sheet> to fetch
a glyph for your pretty terminal? Well, me too!

Introducing nerdy.nvim, a super handy plugin that lets you search, preview and
insert all nerd font glyphs straight from Neovim!


FEATURES                                                      *nerdy-features*

- Fuzzy search and insert nerd glyphs, by name and unicode
- Find and insert icons you use frequently
- Programmatic access to nerd glyphs by name for use in your configs
- Auto fetch latest icons list from official sources


SETUP                                                            *nerdy-setup*


REQUIREMENTS ~

- You have installed the latest version of `neovim`
- snacks.nvim picker <https://github.com/folke/snacks.nvim/blob/main/docs/picker.md> — for prettier select UI and multi select (optional, recommended)


INSTALLATION ~

>lua
    -- Lazy
    {
        '2kabhishek/nerdy.nvim',
        dependencies = {
            'folke/snacks.nvim',
        },
        cmd = 'Nerdy',
        opts = {
            max_recents = 30, -- Configure recent icons limit
            add_default_keybindings = true, -- Add default keybindings
            copy_to_clipboard = false, -- Copy glyph to clipboard instead of inserting
        }
    },
<


USAGE ~


COMMANDS

**Available Commands:**

- `:Nerdy` - Browse all nerd font icons (default behavior)
- `:Nerdy list` - Browse all nerd font icons (explicit)
- `:Nerdy recents` - Browse recently used icons
- `:Nerdy get <icon_name>` - Insert specific icon by name


MULTI SELECT

**Multi-select Support**: When using with snacks.nvim picker
<https://github.com/folke/snacks.nvim/blob/main/docs/picker.md>, you can select
multiple glyphs at once:

- Use `<Tab>` to select/deselect individual glyphs
- Use `<Ctrl-a>` to select all glyphs on a filtered list
- Use `<Enter>` to confirm your selection


KEYBINDINGS

By default, these are the configured keybindings.

  ------------------------------------------------------------------------
  Keybinding   Command                           Description
  ------------ --------------------------------- -------------------------
  <leader>in   :Nerdy list<CR> or :Nerdy<CR>     Browser nerd icons

  <leader>iN   :Nerdy recents<CR>                Browser recent nerd icons
  ------------------------------------------------------------------------
I recommend customizing these keybindings based on your preferences.

Use `:help nerdy` for more details.


TELESCOPE EXTENSION

Nerdy also comes with a Telescope extension, to use it add the following to
your telescope configs.

>lua
    require('telescope').load_extension('nerdy')
<

And then call

>vim
    :Telescope nerdy
    :Telescope nerdy_recents
    " or
    :lua require('telescope').extensions.nerdy.nerdy()
    :lua require('telescope').extensions.nerdy.nerdy_recents()
<


GET ICONS BY NAME PROGRAMMATICALLY

You can also get nerd font icons programmatically using the `nerdy.get()`
function:

>lua
    local nerdy = require('nerdy')
    
    -- Get a specific icon by name
    local lua = nerdy.get('seti-lua')              -- Returns ''
    
    -- Handle cases where icon doesn't exist
    local unknown_icon = nerdy.get('non-existent') -- Returns '' and shows warning
    
    -- Use in your own functions
    local function get_language_icon(language)
        local icon_name = 'md-language_' .. language
        return nerdy.get(icon_name)
    end
<

Recent icons are not tracked when fetching icons programmatically.

**This is useful when configuring Neovim status lines, file trees, or any
plugin that needs consistent nerd font icons without hard coding unicode
characters.**


FETCH NEW ICONS

Running the `python scripts/generator.py` command will automatically fetch new
icons from source
<https://raw.githubusercontent.com/ryanoasis/nerd-fonts/master/glyphnames.json>
and update the icons.


BEHIND THE CODE                                        *nerdy-behind-the-code*


INSPIRATION ~

I love nerd font glyphs, and I use them anywhere I can! but I was wasting a lot
of time going back and forth between nerd font site and neovim, also the copy
feature was super buggy for me on the site, so I made nerdy!


CHALLENGES/LEARNINGS ~

- Making the generated icon table with vim.ui.select was a bit tricky.


TOOLING ~

- dots2k <https://github.com/2kabhishek/dots2k> — Dev Environment
- nvim2k <https://github.com/2kabhishek/nvim2k> — Personalized Editor


MORE INFO ~

- nerdicons.nvim <https://github.com/nvimdev/nerdicons.nvim> — thanks to the original authors for the groundwork.
- co-author.nvim <https://github.com/2kabhishek/co-author.nvim> — Another one of my plugin that lets you add co authors.


Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
