*nerdy.txt*            For Neovim >= 0.8.0           Last change: 2025 June 01

==============================================================================
Table of Contents                                    *nerdy-table-of-contents*

  - Features                                                  |nerdy-features|
  - Setup                                                        |nerdy-setup|
  - Behind The Code                                    |nerdy-behind-the-code|

Do you like Nerd fonts <https://github.com/ryanoasis/nerd-fonts>? but don’t
like going over to their site <https://www.nerdfonts.com/cheat-sheet> to fetch
a glyph for your pretty terminal? Well, me too!

Introducing nerdy.nvim, a super handy plugin that lets you search, preview and
insert all nerd font glyphs straight from neovim!


FEATURES                                                      *nerdy-features*

- Fuzzy search nerd glyphs, by name and unicode
- Preview glyphs before inserting
- Super lightweight
- Can auto generate new icons from source
- Get nerd glyph by name programmatically


SETUP                                                            *nerdy-setup*


REQUIREMENTS ~

- You have installed the latest version of `neovim`
- snacks.nvim picker <https://github.com/folke/snacks.nvim/blob/main/docs/picker.md> — for prettier select UI


INSTALLATION ~

>lua
    -- Lazy
    {
        '2kabhishek/nerdy.nvim',
        dependencies = {
            'folke/snacks.nvim',
        },
        cmd = 'Nerdy',
    },
    
    -- Packer
    use '2kabhishek/nerdy.nvim'
<


USAGE ~

`nerdy.nvim` adds a new command `Nerdy`.

You can add your custom bindings for the command, the recommended keybinding is
`<leader>f,`.

check `:help nerdy` for more details.


  NOTE: By default there are no configured keybindings.

TELESCOPE EXTENSION

Nerdy also comes with a Telescope extension, to use it add the following to
your telescope configs.

>lua
    require('telescope').load_extension('nerdy')
<

And then call

>viml
    :Telescope nerdy
    " or
    :lua require('telescope').extensions.nerdy.nerdy()
<


FETCH NEW ICONS

Running the `python scripts/generator.py` command will automatically fetch new
icons from source
<https://raw.githubusercontent.com/ryanoasis/nerd-fonts/master/glyphnames.json>
and update the icons.


GET ICONS BY NAME PROGRAMMATICALLY

You can also get nerd font icons programmatically using the `nerdy.get()`
function:

>lua
    local nerdy = require('nerdy')
    
    -- Get a specific icon by name
    local lua = nerdy.get('seti-lua')              -- Returns ''
    local neovim = nerdy.get('dev-neovim')         -- Returns ''
    
    -- Handle cases where icon doesn't exist
    local unknown_icon = nerdy.get('non-existent') -- Returns '' and shows warning
    
    -- Use in your own functions
    local function get_language_icon(language)
        local icon_name = 'md-language_' .. language
        return nerdy.get(icon_name)
    end
<

The function returns an empty string if the icon name is not found or if `nil`
is passed as input.

**This is particularly useful when configuring Neovim statuslines, file trees,
tab bars, or any plugin that needs consistent nerd font icons without
hardcoding Unicode characters.**

>lua
    -- Example: Use in statusline configuration
    local function get_git_icon()
        return nerdy.get('dev-git') .. ' '
    end
    
    -- Example: Use in nvim-tree or neo-tree configuration
    local file_icons = {
        lua = nerdy.get('seti-lua'),
        js = nerdy.get('seti-javascript'),
        py = nerdy.get('seti-python'),
    }
<


BEHIND THE CODE                                        *nerdy-behind-the-code*


INSPIRATION ~

I love nerd font glyphs, and I use them anywhere I can! but I was wasting a lot
of time going back and forth between nerd font site and neovim, also the copy
feature was super buggy for me on the site, so I made nerdy!


CHALLENGES/LEARNINGS ~

- Making the generated icon table with vim.ui.select was a bit tricky.


TOOLING ~

- dots2k <https://github.com/2kabhishek/dots2k> — Dev Environment
- nvim2k <https://github.com/2kabhishek/nvim2k> — Personalized Editor


MORE INFO ~

- nerdicons.nvim <https://github.com/nvimdev/nerdicons.nvim> — thanks to the original authors for the groundwork.
- co-author.nvim <https://github.com/2kabhishek/co-author.nvim> — Another one of my plugin that lets you add co authors.


Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
